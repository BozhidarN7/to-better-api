extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )

type Query {
  weeks: [Week!]!
  week(weekId: ID!): Week
}

type Mutation {
  deleteTask(
    weekId: ID
    day: DayOfWeek
    taskId: ID
  ): DeleteTaskMutationResponse!
  createTask(
    weekId: ID!
    dayOfWeek: DayOfWeek!
    task: TaskInput!
  ): CreateTaskMutationResponse!
}

type Week {
  id: ID!
  sevenDaysPeriod: SevenDaysPeriod!
  totalTasks: Int!
  tasksCompleted: Int!
  tasks: DaysOfTheWeek!
}

type DaysOfTheWeek {
  monday: [Task!]!
  tuesday: [Task!]!
  wednesday: [Task!]!
  thursday: [Task!]!
  friday: [Task!]!
  saturday: [Task!]!
  sunday: [Task!]!
}

type SevenDaysPeriod {
  startDate: String!
  endDate: String!
}

interface MutationResponse {
  code: String!
  success: Boolean!
  message: String!
}

type DeleteTaskMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  task: Task
}

type CreateTaskMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  task: Task
}

type Task {
  id: ID!
  title: String!
  description: String
  priority: Priority!
  category: Category!
  isCompleted: Boolean!
}

input TaskInput {
  title: String!
  description: String
  priority: Priority!
  category: Category!
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum Category {
  HOME
  OUTDOOR
  SHOPPING
  TRAINING
  LEARNING
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
